// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.28.0--rc1
// source: RPC.proto

package myRPC

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Gamemode int32

const (
	Gamemode_ANY         Gamemode = 0
	Gamemode_COOPERATION Gamemode = 1
)

// Enum value maps for Gamemode.
var (
	Gamemode_name = map[int32]string{
		0: "ANY",
		1: "COOPERATION",
	}
	Gamemode_value = map[string]int32{
		"ANY":         0,
		"COOPERATION": 1,
	}
)

func (x Gamemode) Enum() *Gamemode {
	p := new(Gamemode)
	*p = x
	return p
}

func (x Gamemode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Gamemode) Descriptor() protoreflect.EnumDescriptor {
	return file_RPC_proto_enumTypes[0].Descriptor()
}

func (Gamemode) Type() protoreflect.EnumType {
	return &file_RPC_proto_enumTypes[0]
}

func (x Gamemode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Gamemode.Descriptor instead.
func (Gamemode) EnumDescriptor() ([]byte, []int) {
	return file_RPC_proto_rawDescGZIP(), []int{0}
}

type Code int32

const (
	Code_SUCCESS Code = 0
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0: "SUCCESS",
	}
	Code_value = map[string]int32{
		"SUCCESS": 0,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_RPC_proto_enumTypes[1].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_RPC_proto_enumTypes[1]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_RPC_proto_rawDescGZIP(), []int{1}
}

type GameRoomFindInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username   string   `protobuf:"bytes,1,opt,name=Username,proto3" json:"Username,omitempty"`
	GameMode   Gamemode `protobuf:"varint,2,opt,name=GameMode,proto3,enum=myRPC.Gamemode" json:"GameMode,omitempty"`
	MustCreate bool     `protobuf:"varint,3,opt,name=MustCreate,proto3" json:"MustCreate,omitempty"`
}

func (x *GameRoomFindInfo) Reset() {
	*x = GameRoomFindInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RPC_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GameRoomFindInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameRoomFindInfo) ProtoMessage() {}

func (x *GameRoomFindInfo) ProtoReflect() protoreflect.Message {
	mi := &file_RPC_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameRoomFindInfo.ProtoReflect.Descriptor instead.
func (*GameRoomFindInfo) Descriptor() ([]byte, []int) {
	return file_RPC_proto_rawDescGZIP(), []int{0}
}

func (x *GameRoomFindInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GameRoomFindInfo) GetGameMode() Gamemode {
	if x != nil {
		return x.GameMode
	}
	return Gamemode_ANY
}

func (x *GameRoomFindInfo) GetMustCreate() bool {
	if x != nil {
		return x.MustCreate
	}
	return false
}

type RoomInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsFind   bool   `protobuf:"varint,1,opt,name=IsFind,proto3" json:"IsFind,omitempty"` //是否找到房间
	RoomId   string `protobuf:"bytes,2,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	RoomAddr string `protobuf:"bytes,3,opt,name=RoomAddr,proto3" json:"RoomAddr,omitempty"` //room的地址，不是roomsServer的地址
	Token    []byte `protobuf:"bytes,4,opt,name=Token,proto3" json:"Token,omitempty"`
}

func (x *RoomInfo) Reset() {
	*x = RoomInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RPC_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfo) ProtoMessage() {}

func (x *RoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_RPC_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfo.ProtoReflect.Descriptor instead.
func (*RoomInfo) Descriptor() ([]byte, []int) {
	return file_RPC_proto_rawDescGZIP(), []int{1}
}

func (x *RoomInfo) GetIsFind() bool {
	if x != nil {
		return x.IsFind
	}
	return false
}

func (x *RoomInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomInfo) GetRoomAddr() string {
	if x != nil {
		return x.RoomAddr
	}
	return ""
}

func (x *RoomInfo) GetToken() []byte {
	if x != nil {
		return x.Token
	}
	return nil
}

type RoomInfoNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId    string `protobuf:"bytes,1,opt,name=RoomId,proto3" json:"RoomId,omitempty"`
	PlayerNum int64  `protobuf:"varint,2,opt,name=PlayerNum,proto3" json:"PlayerNum,omitempty"`
}

func (x *RoomInfoNode) Reset() {
	*x = RoomInfoNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RPC_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInfoNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfoNode) ProtoMessage() {}

func (x *RoomInfoNode) ProtoReflect() protoreflect.Message {
	mi := &file_RPC_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfoNode.ProtoReflect.Descriptor instead.
func (*RoomInfoNode) Descriptor() ([]byte, []int) {
	return file_RPC_proto_rawDescGZIP(), []int{2}
}

func (x *RoomInfoNode) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomInfoNode) GetPlayerNum() int64 {
	if x != nil {
		return x.PlayerNum
	}
	return 0
}

type RoomInfoArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rooms []*RoomInfoNode `protobuf:"bytes,1,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *RoomInfoArray) Reset() {
	*x = RoomInfoArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RPC_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomInfoArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomInfoArray) ProtoMessage() {}

func (x *RoomInfoArray) ProtoReflect() protoreflect.Message {
	mi := &file_RPC_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomInfoArray.ProtoReflect.Descriptor instead.
func (*RoomInfoArray) Descriptor() ([]byte, []int) {
	return file_RPC_proto_rawDescGZIP(), []int{3}
}

func (x *RoomInfoArray) GetRooms() []*RoomInfoNode {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type Res struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code Code `protobuf:"varint,1,opt,name=code,proto3,enum=myRPC.Code" json:"code,omitempty"`
}

func (x *Res) Reset() {
	*x = Res{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RPC_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Res) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Res) ProtoMessage() {}

func (x *Res) ProtoReflect() protoreflect.Message {
	mi := &file_RPC_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Res.ProtoReflect.Descriptor instead.
func (*Res) Descriptor() ([]byte, []int) {
	return file_RPC_proto_rawDescGZIP(), []int{4}
}

func (x *Res) GetCode() Code {
	if x != nil {
		return x.Code
	}
	return Code_SUCCESS
}

type RoomServerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Addr      string `protobuf:"bytes,1,opt,name=Addr,proto3" json:"Addr,omitempty"`
	PlayerNum int64  `protobuf:"varint,2,opt,name=PlayerNum,proto3" json:"PlayerNum,omitempty"` //当前服务器在线玩家
	RoomNum   int64  `protobuf:"varint,3,opt,name=RoomNum,proto3" json:"RoomNum,omitempty"`     //当前服务器正在进行的对局
}

func (x *RoomServerInfo) Reset() {
	*x = RoomServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RPC_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoomServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomServerInfo) ProtoMessage() {}

func (x *RoomServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_RPC_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomServerInfo.ProtoReflect.Descriptor instead.
func (*RoomServerInfo) Descriptor() ([]byte, []int) {
	return file_RPC_proto_rawDescGZIP(), []int{5}
}

func (x *RoomServerInfo) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *RoomServerInfo) GetPlayerNum() int64 {
	if x != nil {
		return x.PlayerNum
	}
	return 0
}

func (x *RoomServerInfo) GetRoomNum() int64 {
	if x != nil {
		return x.RoomNum
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_RPC_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_RPC_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_RPC_proto_rawDescGZIP(), []int{6}
}

var File_RPC_proto protoreflect.FileDescriptor

var file_RPC_proto_rawDesc = []byte{
	0x0a, 0x09, 0x52, 0x50, 0x43, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x79, 0x52,
	0x50, 0x43, 0x22, 0x7b, 0x0a, 0x10, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x46, 0x69,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x6d, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x47, 0x61, 0x6d,
	0x65, 0x6d, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x4d, 0x75, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x4d, 0x75, 0x73, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x22,
	0x6c, 0x0a, 0x08, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x49,
	0x73, 0x46, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x49, 0x73, 0x46,
	0x69, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52,
	0x6f, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52,
	0x6f, 0x6f, 0x6d, 0x41, 0x64, 0x64, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x44, 0x0a,
	0x0c, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52,
	0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x22, 0x3a, 0x0a, 0x0d, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x52, 0x6f, 0x6f, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22,
	0x26, 0x0a, 0x03, 0x52, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6d, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x5c, 0x0a, 0x0e, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x41, 0x64, 0x64,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1c, 0x0a,
	0x09, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x52,
	0x6f, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x52, 0x6f,
	0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x2a, 0x24,
	0x0a, 0x08, 0x47, 0x61, 0x6d, 0x65, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4e,
	0x59, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x01, 0x2a, 0x13, 0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x32, 0x7a, 0x0a, 0x0a, 0x72, 0x43, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x52, 0x50, 0x43, 0x12, 0x36, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17, 0x2e, 0x6d, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x47, 0x61,
	0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x46, 0x69, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f,
	0x2e, 0x6d, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x34, 0x0a, 0x0f, 0x52, 0x6f, 0x6f, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x48, 0x65, 0x61,
	0x72, 0x74, 0x12, 0x15, 0x2e, 0x6d, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0a, 0x2e, 0x6d, 0x79, 0x52, 0x50,
	0x43, 0x2e, 0x52, 0x65, 0x73, 0x32, 0x74, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x52, 0x50, 0x43,
	0x12, 0x36, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x17,
	0x2e, 0x6d, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x46,
	0x69, 0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x0f, 0x2e, 0x6d, 0x79, 0x52, 0x50, 0x43, 0x2e,
	0x52, 0x6f, 0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x0c, 0x2e, 0x6d, 0x79, 0x52, 0x50, 0x43, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x14, 0x2e, 0x6d, 0x79, 0x52, 0x50, 0x43, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x41, 0x72, 0x72, 0x61, 0x79, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x2e, 0x2f, 0x6d, 0x79, 0x52, 0x50, 0x43, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_RPC_proto_rawDescOnce sync.Once
	file_RPC_proto_rawDescData = file_RPC_proto_rawDesc
)

func file_RPC_proto_rawDescGZIP() []byte {
	file_RPC_proto_rawDescOnce.Do(func() {
		file_RPC_proto_rawDescData = protoimpl.X.CompressGZIP(file_RPC_proto_rawDescData)
	})
	return file_RPC_proto_rawDescData
}

var file_RPC_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_RPC_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_RPC_proto_goTypes = []interface{}{
	(Gamemode)(0),            // 0: myRPC.Gamemode
	(Code)(0),                // 1: myRPC.Code
	(*GameRoomFindInfo)(nil), // 2: myRPC.GameRoomFindInfo
	(*RoomInfo)(nil),         // 3: myRPC.RoomInfo
	(*RoomInfoNode)(nil),     // 4: myRPC.RoomInfoNode
	(*RoomInfoArray)(nil),    // 5: myRPC.RoomInfoArray
	(*Res)(nil),              // 6: myRPC.Res
	(*RoomServerInfo)(nil),   // 7: myRPC.RoomServerInfo
	(*Empty)(nil),            // 8: myRPC.Empty
}
var file_RPC_proto_depIdxs = []int32{
	0, // 0: myRPC.GameRoomFindInfo.GameMode:type_name -> myRPC.Gamemode
	4, // 1: myRPC.RoomInfoArray.rooms:type_name -> myRPC.RoomInfoNode
	1, // 2: myRPC.Res.code:type_name -> myRPC.Code
	2, // 3: myRPC.rCenterRPC.CreateRoom:input_type -> myRPC.GameRoomFindInfo
	7, // 4: myRPC.rCenterRPC.RoomServerHeart:input_type -> myRPC.RoomServerInfo
	2, // 5: myRPC.roomRPC.CreateRoom:input_type -> myRPC.GameRoomFindInfo
	8, // 6: myRPC.roomRPC.GetRoomList:input_type -> myRPC.Empty
	3, // 7: myRPC.rCenterRPC.CreateRoom:output_type -> myRPC.RoomInfo
	6, // 8: myRPC.rCenterRPC.RoomServerHeart:output_type -> myRPC.Res
	3, // 9: myRPC.roomRPC.CreateRoom:output_type -> myRPC.RoomInfo
	5, // 10: myRPC.roomRPC.GetRoomList:output_type -> myRPC.RoomInfoArray
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_RPC_proto_init() }
func file_RPC_proto_init() {
	if File_RPC_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_RPC_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GameRoomFindInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RPC_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RPC_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInfoNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RPC_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomInfoArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RPC_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Res); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RPC_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoomServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_RPC_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_RPC_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_RPC_proto_goTypes,
		DependencyIndexes: file_RPC_proto_depIdxs,
		EnumInfos:         file_RPC_proto_enumTypes,
		MessageInfos:      file_RPC_proto_msgTypes,
	}.Build()
	File_RPC_proto = out.File
	file_RPC_proto_rawDesc = nil
	file_RPC_proto_goTypes = nil
	file_RPC_proto_depIdxs = nil
}
